/**
 * This class is generated by jOOQ
 */
package persistencia.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import persistencia.tables.Tiempos;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TiemposRecord extends UpdatableRecordImpl<TiemposRecord> implements Record3<Integer, String, String> {

	private static final long serialVersionUID = -1084107137;

	/**
	 * Setter for <code>kutipak.tiempos.TIEMPOSID</code>.
	 */
	public void setTiemposid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>kutipak.tiempos.TIEMPOSID</code>.
	 */
	public Integer getTiemposid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>kutipak.tiempos.NOMBRETIEMPO</code>.
	 */
	public void setNombretiempo(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>kutipak.tiempos.NOMBRETIEMPO</code>.
	 */
	public String getNombretiempo() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>kutipak.tiempos.NEMOTECNICOTIEMPO</code>.
	 */
	public void setNemotecnicotiempo(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>kutipak.tiempos.NEMOTECNICOTIEMPO</code>.
	 */
	public String getNemotecnicotiempo() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Tiempos.TIEMPOS.TIEMPOSID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tiempos.TIEMPOS.NOMBRETIEMPO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Tiempos.TIEMPOS.NEMOTECNICOTIEMPO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getTiemposid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNombretiempo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getNemotecnicotiempo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TiemposRecord value1(Integer value) {
		setTiemposid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TiemposRecord value2(String value) {
		setNombretiempo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TiemposRecord value3(String value) {
		setNemotecnicotiempo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TiemposRecord values(Integer value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TiemposRecord
	 */
	public TiemposRecord() {
		super(Tiempos.TIEMPOS);
	}

	/**
	 * Create a detached, initialised TiemposRecord
	 */
	public TiemposRecord(Integer tiemposid, String nombretiempo, String nemotecnicotiempo) {
		super(Tiempos.TIEMPOS);

		setValue(0, tiemposid);
		setValue(1, nombretiempo);
		setValue(2, nemotecnicotiempo);
	}
}
