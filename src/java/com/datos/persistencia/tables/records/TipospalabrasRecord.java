/**
 * This class is generated by jOOQ
 */
package persistencia.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import persistencia.tables.Tipospalabras;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TipospalabrasRecord extends UpdatableRecordImpl<TipospalabrasRecord> implements Record3<Integer, String, String> {

	private static final long serialVersionUID = -782535118;

	/**
	 * Setter for <code>kutipak.tipospalabras.TIPOID</code>.
	 */
	public void setTipoid(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>kutipak.tipospalabras.TIPOID</code>.
	 */
	public Integer getTipoid() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>kutipak.tipospalabras.NOMBRETIPO</code>.
	 */
	public void setNombretipo(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>kutipak.tipospalabras.NOMBRETIPO</code>.
	 */
	public String getNombretipo() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>kutipak.tipospalabras.NEMOTECNICO</code>.
	 */
	public void setNemotecnico(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>kutipak.tipospalabras.NEMOTECNICO</code>.
	 */
	public String getNemotecnico() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Tipospalabras.TIPOSPALABRAS.TIPOID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tipospalabras.TIPOSPALABRAS.NOMBRETIPO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Tipospalabras.TIPOSPALABRAS.NEMOTECNICO;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getTipoid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getNombretipo();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getNemotecnico();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TipospalabrasRecord value1(Integer value) {
		setTipoid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TipospalabrasRecord value2(String value) {
		setNombretipo(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TipospalabrasRecord value3(String value) {
		setNemotecnico(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TipospalabrasRecord values(Integer value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TipospalabrasRecord
	 */
	public TipospalabrasRecord() {
		super(Tipospalabras.TIPOSPALABRAS);
	}

	/**
	 * Create a detached, initialised TipospalabrasRecord
	 */
	public TipospalabrasRecord(Integer tipoid, String nombretipo, String nemotecnico) {
		super(Tipospalabras.TIPOSPALABRAS);

		setValue(0, tipoid);
		setValue(1, nombretipo);
		setValue(2, nemotecnico);
	}
}
