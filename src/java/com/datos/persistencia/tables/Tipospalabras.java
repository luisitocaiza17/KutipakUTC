/**
 * This class is generated by jOOQ
 */
package persistencia.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import persistencia.Keys;
import persistencia.Kutipak;
import persistencia.tables.records.TipospalabrasRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tipospalabras extends TableImpl<TipospalabrasRecord> {

	private static final long serialVersionUID = -2125226448;

	/**
	 * The reference instance of <code>kutipak.tipospalabras</code>
	 */
	public static final Tipospalabras TIPOSPALABRAS = new Tipospalabras();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TipospalabrasRecord> getRecordType() {
		return TipospalabrasRecord.class;
	}

	/**
	 * The column <code>kutipak.tipospalabras.TIPOID</code>.
	 */
	public final TableField<TipospalabrasRecord, Integer> TIPOID = createField("TIPOID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>kutipak.tipospalabras.NOMBRETIPO</code>.
	 */
	public final TableField<TipospalabrasRecord, String> NOMBRETIPO = createField("NOMBRETIPO", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

	/**
	 * The column <code>kutipak.tipospalabras.NEMOTECNICO</code>.
	 */
	public final TableField<TipospalabrasRecord, String> NEMOTECNICO = createField("NEMOTECNICO", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

	/**
	 * Create a <code>kutipak.tipospalabras</code> table reference
	 */
	public Tipospalabras() {
		this("tipospalabras", null);
	}

	/**
	 * Create an aliased <code>kutipak.tipospalabras</code> table reference
	 */
	public Tipospalabras(String alias) {
		this(alias, TIPOSPALABRAS);
	}

	private Tipospalabras(String alias, Table<TipospalabrasRecord> aliased) {
		this(alias, aliased, null);
	}

	private Tipospalabras(String alias, Table<TipospalabrasRecord> aliased, Field<?>[] parameters) {
		super(alias, Kutipak.KUTIPAK, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TipospalabrasRecord, Integer> getIdentity() {
		return Keys.IDENTITY_TIPOSPALABRAS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TipospalabrasRecord> getPrimaryKey() {
		return Keys.KEY_TIPOSPALABRAS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TipospalabrasRecord>> getKeys() {
		return Arrays.<UniqueKey<TipospalabrasRecord>>asList(Keys.KEY_TIPOSPALABRAS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Tipospalabras as(String alias) {
		return new Tipospalabras(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Tipospalabras rename(String name) {
		return new Tipospalabras(name, null);
	}
}
